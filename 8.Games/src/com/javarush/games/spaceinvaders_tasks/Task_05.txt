taskKey="com.javarush.games.spaceinvaders.part05"\n\nИгра Space Invaders (5/34)

Кроме звезд в игре буду задействованы другие игровые объекты, а именно &mdash; космические корабли.
Внешний вид игрового объекта на плоскости задается в виде матрицы matrix, поэтому добавим поле matrix в
классе GameObject. Кроме формы объекта, матрица содержит порядковый номер цвета из списка цветов
com.javarush.engine.cell.Color. Габаритные размеры объекта вынесем в отдельные поля &mdash; ширину и высоту.
Чтобы отобразить игровой объект на экране, создадим и реализуем метод draw(Game game). В этом методе для
каждой ячейки матрицы matrix будем вызывать метод setCellValueEx(int x, int y, Color color, String text) у
объекта типа Game, который получаем в качестве параметра.
Для отрисовки элементов матрицы matrix на игровом поле необходимо учитывать, что координаты x и y объекта класса
GameObject &mdash; это координаты левой верхней ячейки матрицы matrix на игровом поле.
Пример:
/api/1.0/rest/images/13414/b23b98bd-d303-41ed-a93c-c784236acee4

Как видно из примера, левая верхняя ячейка матрицы игрового объекта имеет координаты на игровом поле x = 2 и y = 4,
но относительно своей матрицы - это координаты x = 0 и y = 0. Исходя из этого, в метод setCellValueEx будут
передаваться координаты верхней левой ячейки матрицы игрового объекта на игровом поле + координаты ячейки в
матрице игрового объекта (x = 2 + 0, y = 4 + 0).
Пример:
game.setCellValueEx(x объекта на игровом поле + x в матрице, y объекта на игровом поле + y в матрице, цвет, пустая строка);

Обрати внимание, что color &mdash; это цвет элемента из матрицы объекта, который можно получить так:
Color.values()[matrix[i][j]], где
i &ndash; координата y в матрице matrix,
j &ndash; координата x в матрице matrix.


Требования:
1.	В классе GameObject должно существовать публичное поле matrix типа int[][].
2.	В классе GameObject должно существовать публичное поле width типа int.
3.	В классе GameObject должно существовать публичное поле height типа int.
4.	В классе GameObject должен существовать публичный метод void setMatrix(int[][]).
5.	Метод setMatrix(int[][]) должен устанавливать поле matrix, равное полученному параметру метода.
6.	В методе setMatrix(int[][]) поле width должно инициализироваться значением matrix[0].length.
7.	В методе setMatrix(int[][]) поле height должно инициализироваться значением matrix.length.
8.	В классе GameObject должен существовать публичный метод void draw(Game).
9.	В методе draw(Game) для каждой ячейки матрицы matrix должен быть вызван метод setCellValueEx(int, int, Color, String) у объекта типа Game. В качестве параметров необходимо передать: x объекта на игровом поле + x в матрице, y объекта на игровом поле + y в матрице, цвет и пустую строку.
10.	В классе GameObject должен быть импорт всего содержимого пакета com.javarush.engine.cell.




